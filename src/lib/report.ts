import * as fs from 'fs';
import * as path from 'path';
import type { AuditData } from './audit';
import { format } from '../data/date';
import { getSeverity } from '../data/tsError';

export async function generateHtmlReport(pathStr: string, data: AuditData[]) {
  const tmpPath = path.resolve(`${pathStr}/iron-golem-ts`);
  const htmlFile = path.join(tmpPath, 'report.html');
  if (!fs.existsSync(tmpPath)) {
    fs.mkdirSync(tmpPath, { recursive: true });
  }

  const chartData = data
    .sort((a, b) => a.targetDate.getTime() - b.targetDate.getTime())
    .map((d) => ({ date: d.targetDate, count: d.errorCodes.length }));

  const latestData: AuditData | null = data.sort(
    (a, b) => b.targetDate.getTime() - a.targetDate.getTime()
  )[0];

  const errorSummary = latestData?.errorCodes.reduce(
    (summary: Record<string, { count: number }>, codeNum) => {
      const code = `TS${codeNum}`;
      if (!summary[code]) {
        summary[code] = { count: 0 };
      }
      summary[code].count += 1;
      return summary;
    },
    {}
  );

  const tableRows = Object.entries(errorSummary)
    .sort(([, summaryA], [, summaryB]) => summaryB.count - summaryA.count)
    .map(
      ([code, { count }]) =>
        `<tr><td>${code}</td><td>${count}</td><td>${getSeverity(code)}</td></tr>`
    )
    .join('\n');

  const html = `
    <html>
    <head>
      <title>Iron Golem TS Report</title>
      <script type="application/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
      <style>${getReportCss()}</style>
    </head>
    <body>
      <h1>TSC Error History</h1>
      <canvas id="errorChart" width="800" height="400"></canvas>
      <script>
        const ctx = document.getElementById('errorChart').getContext('2d');
        new Chart(ctx, {
          type: 'line',
          data: {
            labels: ${JSON.stringify(chartData.map((d) => format(new Date(d.date), 'yyyy-MM-dd')))},
            datasets: [{
              label: 'Errors',
              data: ${JSON.stringify(chartData.map((d) => d.count))},
              fill: false,
              borderColor: '#e74c3c',
              backgroundColor: '#e74c3c',
            }]
          },
          options: {
            scales: {
              x: {
                ticks: {
                  color: '#333'
                }
              },
              y: {
                ticks: {
                  color: '#333'
                }
              }
            },
            plugins: {
              legend: {
                labels: {
                  color: '#333'
                }
              }
            }
          }
        });
      </script>

      <h2>Current Error Breakdown (Total Errors: ${latestData?.errorCodes.length || 0})</h2>
      <table>
        <thead>
          <tr><th>Error Code</th><th>Count</th><th>Severity</th></tr>
        </thead>
        <tbody>
          ${tableRows}
        </tbody>
      </table>
      <footer>
      <p>
        Generated by <strong>üõ°Ô∏è Iron Golem TS</strong> |
        <a href="https://github.com/programever/iron-golem-ts" target="_blank">GitHub Repository</a>
      </p>
    </footer>
    </body>
    </html>
  `;

  fs.writeFileSync(htmlFile, html, 'utf-8');
}

function getReportCss(): string {
  return `
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      padding: 40px;
      background: #f8f9fa;
      color: #333;
    }

    h1, h2 {
      text-align: center;
      color: #2c3e50;
    }

    canvas {
      display: block;
      margin: 0 auto 40px;
      border: 1px solid #ccc;
      background: white;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background-color: #fff;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    th, td {
      border: 1px solid #dee2e6;
      padding: 12px 16px;
      text-align: left;
    }

    thead {
      background-color: #e9ecef;
    }

    tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    tr:hover {
      background-color: #f1f1f1;
    }

    td:nth-child(3) {
      white-space: nowrap;
    }
  `;
}
